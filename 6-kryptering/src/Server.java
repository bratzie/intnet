import javax.net.ssl.*;
import java.io.*;
import java.security.*;

public class Server{

    public static void main(String[] args) {
        // init stuff
        KeyStore ks;
        InputStream is;

        try {
            // get KeyStore
            ks = KeyStore.getInstance("JKS", "SUN");
            // read our key generated by KeyTool
            is = new FileInputStream(new File("key"));

            assert ks != null;
            // load key with our storepass
            ks.load(is, "rootroot".toCharArray());

            // create a kmf with default algorithm
            KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm()); //SunX509?
            kmf.init(ks, "hejsan".toCharArray());

            // get context
            SSLContext context = SSLContext.getInstance("TLS");
            context.init(kmf.getKeyManagers(), null, null);

            // create SSLServerSocketFactory
            SSLServerSocketFactory factory = context.getServerSocketFactory();
            SSLServerSocket serverSocket = (SSLServerSocket) factory.createServerSocket(4711);

            // input all of the ciphers!
            serverSocket.setEnabledCipherSuites(factory.getSupportedCipherSuites());

            /*
            for(int i = 0; i < serverSocket.getEnabledCipherSuites().length; i++)
                System.out.println(serverSocket.getEnabledCipherSuites()[i]);
            */

            SSLSocket socket = null;
            BufferedWriter out = null;

            while (true) {
                try {
                    socket = (SSLSocket) serverSocket.accept();

                    try {
                        socket.startHandshake();
                    } catch (SSLException e) {
                        System.out.println("Unrecognized SSL message, plaintext connection?");
                        System.out.println("Closing connection, listening for more juicy safe stuff.");
                        socket.close();
                        continue;
                    }

                    out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));

                    System.out.println("Client " + socket.hashCode() + " connected. Writing message 'Hello World'");
                    out.write("HTTP/1.0 200 OK");
                    out.newLine();
                    out.write("Content-Type: text/html");
                    out.newLine();
                    out.newLine();
                    out.write("<html><body><h1>Hello world!</h1></body></html>");
                    out.newLine();

                    out.flush();
                    out.close();
                } catch (SSLHandshakeException e) {
                    e.printStackTrace();
                } finally {
                    if (socket != null)
                        socket.close();
                }
            }
        } catch (Exception e) {
            // one catch to rule them all
            e.printStackTrace();
        }
    }
}
